extend type Query {
  plantings(cropType: String!): [Planting!]!
  planting(id: String!): Planting
  highlightedPlanting: Planting
  groupedValues(cropType: String!): [GroupedValues!]!
  filters(cropType: String!): [Filter!]!
  selectedCropType: String!
  test: Boolean!
  openEventCards(cropType: String!): [Planting!]!

  # cartItems: [Launch]!
}
type Planting {
  id: String!
  cropType: String!
  values: [PlantingValue!]!
  title: String!
  producerName: String!
  params: PlantingParams!
  events: [PlantingEvent!]!
  matchingFilters: [Filter!]!
  isHighlighted: Boolean!
}
type PlantingValue {
  name: String!
  value: Float!
  plantingId: String!
}
type PlantingParams {
  zone: String!
  temperature: String!
  precipitation: String!
  texture: String!
}

type PlantingEvent {
  id: String!
  type: String!
  date: String!
}

type FilterParams {
  groups: [String!]!
  colors: [String!]!
  years: [Int!]!
  sweetnessScore: [Int!]!
  flavorScore: [Int!]!
  tasteScore: [Int!]!
  climateRegion: [String!]!
  sampleSource: [String!]!
  farmPractices: [String!]!
  amendments: [String!]!
  landPreparation: [String!]!
}

type Filter {
  id: String!
  name: String!
  color: String!
  cropType: String!
  plantings: [Planting]!
  draftParams: FilterParams
  activeParams: FilterParams
}

type GroupedValues {
  id: String!
  filter: Filter
  values: [PlantingValue!]!
}
