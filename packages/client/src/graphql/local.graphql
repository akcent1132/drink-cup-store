extend type Query {
  highlightedPlantingId: String
  highlightedFilterId: String
  plantings(cropType: String!): [Planting!]!
  allPlantings: [Planting!]!
  planting(id: String!): Planting
  filters(cropType: String!): [Filter!]!
  filter(id: String!): Filter
  selectedCropType: String!
  test: Boolean!
  openEventCardIds(cropType: String!): [String!]!
  selectedFilterId: String
  selectedProducerId: String
  auth: AuthState,
  notgood: String
}
extend type Planting {
  matchingFilters: [Filter!]!
  isHighlighted: Boolean!
}
type FilterValueOption {
  options: [String!]!
}
type FilterValueRange {
  min: Float!,
  max: Float!,
}

union FilterValue = FilterValueOption | FilterValueRange
enum FilterParamDataSource {
  VALUES
  FARM_ONBOARDING
}

type FilterParam {
  key: String!
  value: FilterValue!
  active: Boolean!
  dataSource: FilterParamDataSource,
}

type Filter {
  id: String!
  name: String!
  color: String!
  cropType: String!
  plantings: [Planting!]!
  params: [FilterParam!]!
  isHighlighted: Boolean!
}


type AuthUser { 
  id: String!
  name: String!
  email: String!
}

type AuthState {
  isLoggedIn: Boolean!
  user: AuthUser
}

