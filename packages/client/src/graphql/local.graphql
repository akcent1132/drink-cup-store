# extend type Query {
#   # highlightedPlantingId: String
#   # highlightedFilterId: String
#   # selectedCropType: String!
#   # openEventCardIds(cropType: String!): [String!]!
#   # selectedFilterId: String
#   # selectedProducerId: String
#   # auth: AuthState,
# }
# extend type Planting {
#   isHighlighted: Boolean!
# }
type FilterValueOption {
  options: [String!]!
}
type FilterValueRange {
  min: Float!,
  max: Float!,
}

union FilterValue = FilterValueOption | FilterValueRange
enum FilterParamDataSource {
  VALUES
  FARM_ONBOARDING
}

type FilterParam {
  key: String!
  value: FilterValue!
  active: Boolean!
  dataSource: FilterParamDataSource,
}

type Filter {
  id: String!
  name: String!
  color: String!
  cropType: String!
  plantings: [Planting!]!
  params: [FilterParam!]!
  # isHighlighted: Boolean!
}


# type AuthUser { 
#   id: String!
#   name: String!
#   email: String!
# }

# type AuthState {
#   isLoggedIn: Boolean!
#   user: AuthUser
# }

